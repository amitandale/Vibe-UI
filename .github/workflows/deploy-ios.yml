name: Deploy iOS

on:
  workflow_run:
    workflows: ["ci-test-coverage"]
    types: [completed]

permissions:
  contents: read

concurrency:
  group: deploy-ios-${{ github.event.workflow_run.head_branch }}
  cancel-in-progress: true

jobs:
  gate:
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      (github.event.workflow_run.head_branch == 'work' || github.event.workflow_run.head_branch == 'main')
    runs-on: macos-14
    outputs:
      sha: ${{ steps.out.outputs.sha }}
      branch: ${{ steps.out.outputs.branch }}
      env: ${{ steps.out.outputs.env }}
    steps:
      - id: out
        run: |
          echo "sha=${{ github.event.workflow_run.head_sha }}" >> "$GITHUB_OUTPUT"
          echo "branch=${{ github.event.workflow_run.head_branch }}" >> "$GITHUB_OUTPUT"
          if [ "${{ github.event.workflow_run.head_branch }}" = "main" ]; then
            echo "env=prod" >> "$GITHUB_OUTPUT"
          else
            echo "env=dev" >> "$GITHUB_OUTPUT"
          fi

  build-sign:
    needs: gate
    runs-on: macos-14
    env:
      DEPLOY_SHA: ${{ needs.gate.outputs.sha }}
      DEPLOY_BRANCH: ${{ needs.gate.outputs.branch }}
      DEPLOY_ENV: ${{ needs.gate.outputs.env }}
    steps:
      - name: Checkout tested SHA
        uses: actions/checkout@v4
        with:
          ref: ${{ env.DEPLOY_SHA }}

      - name: Select Xcode
        run: sudo xcode-select -s "/Applications/Xcode_15.4.app"

      - name: Install dependencies (CocoaPods optional)
        run: |
          if [ -f "ios/Podfile" ]; then
            brew install cocoapods || true
            pod install --project-directory=ios
          fi

      - name: Import signing certs
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_P12_BASE64 }}
          p12-password: ${{ secrets.IOS_P12_PASSWORD }}

      - name: Install provisioning profiles
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id: ${{ secrets.IOS_BUNDLE_ID }}
          issuer-id: ${{ secrets.APPSTORECONNECT_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORECONNECT_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORECONNECT_API_KEY }}

      - name: Archive
        run: |
          xcodebuild -workspace ios/App.xcworkspace -scheme App                 -configuration Release -archivePath build/App.xcarchive                 clean archive CODE_SIGN_STYLE=Manual | xcpretty || true

      - name: Export IPA
        run: |
          xcodebuild -exportArchive -archivePath build/App.xcarchive                 -exportPath build -exportOptionsPlist ios/exportOptions.plist | xcpretty || true

      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-${{ env.DEPLOY_ENV }}-${{ env.DEPLOY_SHA }}
          path: build/**/*.ipa
