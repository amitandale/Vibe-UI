name: test-coverage
on:
  push:
  pull_request:
jobs:
  test-coverage:
    runs-on: [self-hosted, linux]
    strategy:
      matrix:
        profile: [serverless, longrun]
    env:
      NODE_V8_COVERAGE: coverage/tmp
      PROFILE: ${{ matrix.profile }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18.20.8'
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci
          else
            npm i
          fi
      - name: Prepare coverage directory
        run: mkdir -p coverage/tmp
      - name: Syntax validation (ESM)
        run: |
          set -euo pipefail
          # Check all .mjs files with Node parser
          mapfile -t MJS < <(git ls-files '*.mjs' || true)
          if [ "${#MJS[@]}" -gt 0 ]; then
            for f in "${MJS[@]}"; do
              node --check "$f"
            done
          fi
          # Only check .js if the repo declares ESM in package.json
          if node -e "try{process.exit(JSON.parse(require('fs').readFileSync('package.json','utf8')).type==='module'?0:1)}catch(e){process.exit(1)}" 2>/dev/null; then
            mapfile -t JS < <(git ls-files '*.js' || true)
            if [ "${#JS[@]}" -gt 0 ]; then
              for f in "${JS[@]}"; do
                node --check "$f"
              done
            fi
          fi
      - name: Run tests (Node runner)
        run: npm run -s test
      - name: Coverage summary (text)
        run: npx c8 report --reporter=text
      - name: Coverage artifact (lcov)
        run: npx c8 report --reporter=lcov
      - name: Upload lcov
        uses: actions/upload-artifact@v4
        with:
          name: coverage-lcov-${{ matrix.profile }}
          path: coverage/lcov.info
          if-no-files-found: ignore
