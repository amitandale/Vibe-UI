name: test-coverage
on:
  push:
  pull_request:
jobs:
  test-coverage:
    runs-on: [self-hosted, linux]
    env:
      NODE_V8_COVERAGE: coverage/tmp
      PROFILE: default
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18.20.8'
      - name: Ensure dependencies (idempotent)
        run: |
          set -euo pipefail
          if [ -f package-lock.json ]; then
            LOCK_HASH="$(sha256sum package-lock.json | cut -d' ' -f1)"
          else
            LOCK_HASH="nolock"
          fi
          if [ -d node_modules ] && [ -f node_modules/.installedLockHash ] && [ "$(cat node_modules/.installedLockHash)" = "$LOCK_HASH" ]; then
            echo "Dependencies up to date. Skipping install."
          else
            if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
              npm ci --prefer-offline --no-audit --fund=false
            else
              npm i --prefer-offline --no-audit --fund=false
            fi
            echo "$LOCK_HASH" > node_modules/.installedLockHash
          fi
      - name: Prepare coverage directory
        run: mkdir -p coverage/tmp


      - name: Syntax validation (ESM .mjs across repo)
        run: |
          set -euo pipefail
          if [ -d . ]; then
            while IFS= read -r -d '' f; do
              node --check "$f"
            done < <(find . -path ./node_modules -prune -o -type f -name '*.mjs' -print0)
          fi
      - name: Syntax validation (JSX .js/.jsx across repo via local Babel)
        run: |
          set -euo pipefail
          if [ -x ./node_modules/.bin/babel ]; then
            while IFS= read -r -d '' f; do
              ./node_modules/.bin/babel "$f" --config-file /dev/null --no-babelrc --plugins @babel/plugin-syntax-jsx --filename "$f" -o /dev/null
            done < <(find . -path ./node_modules -prune -o -type f \( -name '*.js' -o -name '*.jsx' \) -print0)
          else
            echo "Babel CLI not found; skipping JSX syntax parse. Add devDeps: @babel/core @babel/cli @babel/plugin-syntax-jsx to enable."
          fi

      - name: Run tests (Node runner)
        run: npm run -s test
      - name: Coverage summary (text)
        run: npx c8 report --reporter=text
      - name: Coverage artifact (lcov)
        run: npx c8 report --reporter=lcov
      - name: Upload lcov
        uses: actions/upload-artifact@v4
        with:
          name: coverage-lcov-default
          path: coverage/lcov.info
          if-no-files-found: ignore
